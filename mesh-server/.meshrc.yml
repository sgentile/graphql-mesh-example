sources:
  - name: AuthorService
    handler:
      graphql:
        endpoint: http://localhost:5000/graphql
    # transforms:
    #   - typeMerging:
    #       queryFields:
    #         - queryFieldName: author
    #           keyField: id
  - name: BookService
    handler:
      graphql:
        endpoint: http://localhost:5001/graphql
    # transforms:
    #   - typeMerging:
    #       queryFields:
    #         - queryFieldName: book
    #           keyField: id
additionalTypeDefs: |
  extend type Book {
    author: Author
  }
  extend type Author {
    books: [Book]
  }

additionalResolvers:
  - targetTypeName: Book
    targetFieldName: author
    requiredSelectionSet: |
      {
        authorId
      }
    sourceName: AuthorService
    sourceTypeName: Query
    sourceFieldName: author
    sourceArgs:
      where.id: "{root.authorId}"
  - targetTypeName: Author
    targetFieldName: books
    requiredSelectionSet: |
      {
        id
      }
    sourceName: BookService
    sourceTypeName: Query
    sourceFieldName: books
    sourceArgs:
      where.authorId.equals: "{root.id}"

# targetTypeName: the type of what you’re trying to resolve
# targetFieldName: the field on the type of what you’re trying to resolve
# requiredSelectionSet: the fields you need to pass to your Query/Mutation (specified by sourceTypeName) with the name sourceFieldName.
# sourceName: which endpoint you’d like to use for your query/mutation
# sourceTypeName what type of request you’re making (Query/Mutation)
# sourceFieldName: the name of the query/mutation
# sourceArgs: what args the sourceFieldName requires to run

require:
  - ts-node/register/transpile-only
