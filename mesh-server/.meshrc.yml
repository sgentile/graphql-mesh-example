sources:
  - name: AuthorService
    handler:
      graphql:
        endpoint: http://localhost:5000/graphql
    transforms:
      - typeMerging:
          queryFields:
            - queryFieldName: author
              keyField: id
  - name: BookService
    handler:
      graphql:
        endpoint: http://localhost:5001/graphql
    transforms:
      # - rename:
      #     renames:
      #       - from:
      #           type:

      - typeMerging:
          queryFields:
            # No need to define which type it belongs
            # And no need to define a key for type
            # keyField assigns to that type automatically
            - queryFieldName: book
              # Mesh automatically does batching if return type is a list
              keyField: id
additionalTypeDefs: |
  extend type Book {
    author: Author
  }

# additionalResolvers:
#   - sourceName: AuthorService
#     sourceTypeName: Query
#     sourceFieldName: authors
#     keyField: authorId
#     keysArg: ids
#     targetTypeName: Book
#     targetFieldName: author
additionalResolvers:
  - targetTypeName: Book
    targetFieldName: author
    requiredSelectionSet: |
      {
        authorId
      }
    sourceName: AuthorService
    sourceTypeName: Query
    sourceFieldName: author
    sourceArgs:
      where.id: "{root.authorId}"

# documents:
#   - ./queries/*.graphql
require:
  - ts-node/register/transpile-only
